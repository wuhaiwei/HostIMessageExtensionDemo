//
//  MessagesViewController.m
//  MessageExtension
//
//  Created by  wuhiwi on 16/11/23.
//  Copyright © 2016年 wanglibank.com. All rights reserved.
//

#import "MessagesViewController.h"
#import "MessageChildVC.h"

#define SCREEN_WIDTH [[UIScreen mainScreen] bounds].size.width
#define SCREEN_HEIGHT [[UIScreen mainScreen] bounds].size.height
#define kTableViewCellReuseIdentifier @"kTableViewCellReuseIdentifier"

@interface MessagesViewController () <UITableViewDelegate,UITableViewDataSource>

@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *topConstraint;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *leftConstraint;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *rightConstraint;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *bottomConstraint;

@property (nonatomic, strong) NSMutableArray *dataArray;
@property (nonatomic, strong) MSSession *session;

@end

@implementation MessagesViewController


- (void)viewDidLoad {
    [super viewDidLoad];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    [_tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:kTableViewCellReuseIdentifier];
    self.session = [[MSSession alloc] init];
}


#pragma mark - Conversation Handling

//在Messages App加载完成处于活跃状态时被调用，然后根据其中模式设置布局参数
-(void)didBecomeActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the inactive to active state.
    // This will happen when the extension is about to present UI.
    
    // Use this method to configure the extension and restore previously stored state.
    if (self.presentationStyle == MSMessagesAppPresentationStyleCompact) {
        _topConstraint.constant = 0;
        _leftConstraint.constant = 0;
        _bottomConstraint.constant = -44;
        _rightConstraint.constant = -15;
    }else
    {
        _topConstraint.constant = -85;
        _leftConstraint.constant = 0;
        _bottomConstraint.constant = 0;
        _rightConstraint.constant = 0;
    }
    [self.view layoutIfNeeded];
}

-(void)willResignActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the active to inactive state.
    // This will happen when the user dissmises the extension, changes to a different
    // conversation or quits Messages.
    
    // Use this method to release shared resources, save user data, invalidate timers,
    // and store enough state information to restore your extension to its current state
    // in case it is terminated later.
}

-(void)didReceiveMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when a message arrives that was generated by another instance of this
    // extension on a remote device.
    
    // Use this method to trigger UI updates in response to the message.
}

-(void)didStartSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user taps the send button.
}

-(void)didCancelSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user deletes the message without sending it.
    
    // Use this to clean up state related to the deleted message.
}

-(void)willTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called before the extension transitions to a new presentation style.
    
    // Use this method to prepare for the change in presentation style.
}
//视图控制器的模式发生变化时进行回调，可以在这里根据模式修改布局
-(void)didTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called after the extension transitions to a new presentation style.
    
    // Use this method to finalize any behaviors associated with the change in presentation style.
    if (presentationStyle == MSMessagesAppPresentationStyleCompact) {
        //紧凑的
        _topConstraint.constant = 0;
        _leftConstraint.constant = -15;
        _bottomConstraint.constant = -44;
        _rightConstraint.constant = -15;
    }else
    {
        //展开的
        _topConstraint.constant = -85;
        _leftConstraint.constant = -15;
        _bottomConstraint.constant = 0;
        _rightConstraint.constant = -15;
    }
    [self.view layoutIfNeeded];
}

#pragma mark - UITableViewDelegate,UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:kTableViewCellReuseIdentifier];
    cell.textLabel.text = [self.dataArray objectAtIndex:indexPath.row];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    switch (indexPath.row) {
        case 0:
        {
            [self.activeConversation insertText:@"新的信息" completionHandler:^(NSError * error) {
                
            }];
            [self requestPresentationStyle:MSMessagesAppPresentationStyleCompact];
        }
            break;
        case 1:
        {
            
            NSURL *url = [[NSURL alloc] initFileURLWithPath:[[NSBundle mainBundle] pathForResource:@"013" ofType:@"png"]];
            [self.activeConversation insertSticker:[[MSSticker alloc] initWithContentsOfFileURL:url localizedDescription:@"image" error:nil] completionHandler:nil];
            [self requestPresentationStyle:MSMessagesAppPresentationStyleCompact];
        }
            break;
        case 2:
        {
            NSString *fileString = [[NSBundle mainBundle] pathForResource:@"text" ofType:@"txt"];
            if (fileString.length != 0) {
               NSURL *url = [[NSURL alloc] initFileURLWithPath:fileString];
                [self.activeConversation insertAttachment:url withAlternateFilename:@"text" completionHandler:nil];
            }
        }
            break;
        case 3:
        {
            MSMessage * message = [[MSMessage alloc]initWithSession:_session];
            message.URL = [NSURL URLWithString:@"http://www.baidu.com"];
            message.accessibilityLabel = @"message";
            message.summaryText = @"message";
            MSMessageTemplateLayout * layout = [[MSMessageTemplateLayout alloc]init];
            layout.caption = @"caption";
            layout.subcaption = @"subcaption";
            layout.trailingCaption = @"trailing";
            layout.trailingSubcaption =@"subtrailing";
            layout.image = [UIImage imageNamed:@"ic_common_wanglibank"];
            NSURL *url = [[NSURL alloc] initFileURLWithPath:[[NSBundle mainBundle] pathForResource:@"ic_common_wanglibank" ofType:@"png"]];
            layout.mediaFileURL = url;
            layout.imageTitle = @"易黄金";
            layout.imageSubtitle = @"易黄金";
            
            message.layout = layout;
            
            [self.activeConversation insertMessage:message completionHandler:nil];
            [self requestPresentationStyle:MSMessagesAppPresentationStyleCompact];
        }
            break;
        case 4:
        {
            if (self.presentationStyle == MSMessagesAppPresentationStyleCompact) {
                //紧凑模式下点击进入扩展模式
                [self requestPresentationStyle:MSMessagesAppPresentationStyleExpanded];
            }else
            {
                //扩展模式下 进入子页面
                [self presentViewController:[[MessageChildVC alloc] init] animated:YES completion:nil];
            }
            
        }
            break;
        case 5:
        {
            
        }
            break;
        default:
            break;
    }
}


#pragma mark - setter getter

- (NSMutableArray *)dataArray
{
    if (!_dataArray) {
        _dataArray = [NSMutableArray arrayWithObjects:@"发送文本信息",@"插入表情",@"插入文件",@"插入消息实体",@"跳转第二个界面",@"贴图包", nil];
    }
    return _dataArray;
}

@end
